/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.8.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package za.co.protogen.controller.models.openapi.api;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

import javax.validation.Valid;
import javax.validation.constraints.*;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-11-05T20:49:04.739846900+02:00[Africa/Johannesburg]", comments = "Generator version: 7.8.0")
@Validated
@Tag(name = "car", description = "the car API")
public interface GetCarMakeApi {

    default GetCarMakeApiDelegate getDelegate() {
        return new GetCarMakeApiDelegate() {};
    }

    /**
     * GET /getCar_make : Find and Return car using make
     *
     * @param make Car make used to retrieve car (required)
     * @return Successful Responds. Return List of Cars matching make criteria (status code 200)
     *         or No Car matches make criteria or Empty Repository (status code 404)
     */
    @Operation(
        operationId = "getByMake",
        summary = "Find and Return car using make",
        tags = { "car", "find", "make", "return" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful Responds. Return List of Cars matching make criteria", content = {
                @Content(mediaType = "text/html", schema = @Schema(implementation = String.class))
            }),
            @ApiResponse(responseCode = "404", description = "No Car matches make criteria or Empty Repository", content = {
                @Content(mediaType = "text/html", schema = @Schema(implementation = String.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/getCar_make",
        produces = { "text/html" }
    )
    
    default ResponseEntity<String> getByMake(
        @NotNull @Parameter(name = "make", description = "Car make used to retrieve car", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "make", required = true) String make
    ) {
        return getDelegate().getByMake(make);
    }

}
