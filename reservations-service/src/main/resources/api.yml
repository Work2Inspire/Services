openapi: 3.0.1
info:
  title: reservationServiceAPI
  version: 1.0.0
paths:
  /addReservation:
    post:
      summary: Create new reservation
      operationId: createRes
      tags:
        - Reservation
        - new
        - add
      parameters:
        - name: id
          in: query
          required: true
          description: The unique identifier for the reservation
          schema:
            type: integer
            format: int64
        - name: userId
          in: query
          required: true
          description: The unique identifier for the user associated with the reservation
          schema:
            type: integer
            format: int64
        - name: carId
          in: query
          required: true
          description: The unique identifier for the car reserved
          schema:
            type: string
        - name: fromDate
          in: query
          required: true
          description: The starting date of the reservation
          schema:
            type: string
            format: date
        - name: toDate
          in: query
          required: true
          description: The ending date of the reservation
          schema:
            type: string
            format: date
        - name: pLocation
          in: query
          required: true
          description: The location where the car will be picked up
          schema:
            type: string
        - name: dLocation
          in: query
          required: true
          description: The location where the car will be dropped off.
          schema:
            type: string
      responses:
        "200":
          description: Successful. responds with message and all reservations
          content:
            text/html:
              schema:
                type: string
  "/removeReservation/{id}":
    delete:
      summary: Remove a reservation
      operationId: removeRes
      tags:
        - Reservation
        - remove
        - delete
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier for the reservation
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful. responds with message and all reservations in repository
          content:
            text/html:
              schema:
                type: string
        "404":
          description: Reservation Id not found or Repository Empty
          content:
            text/html:
              schema:
                type: string
              examples:
                emptyRepository:
                  value: "Empty Repository: No reservations to return"
                noMatch:
                  value: "Error: ID not found"
  /getAll_Reservations:
    get:
      summary: Return all reservation
      operationId: getAll_Res
      tags:
        - Reservation
        - get
        - All
      responses:
        "200":
          description: Successful. responds with message and all reservations in repository
          content:
            text/html:
              schema:
                type: string
        "404":
          description: Reservation Id not found
          content:
            text/html:
              schema:
                type: string
              examples:
                emptyRepository:
                  value: "Empty Repository: No cars to return"
  "/getReservation_ById/{id}":
    get:
      summary: Returns a reservation using its unique identifier
      operationId: getReservationById
      tags:
        - Reservation
        - Id
        - get
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier for the reservation
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful. responds with message and corresponding reservation
          content:
            text/html:
              schema:
                type: string
        "404":
          description: Reservation Id not found or Repository Empty
          content:
            text/html:
              schema:
                type: string
              examples:
                emptyRepository:
                  value: "Empty Repository: No reservations to return"
                noMatch:
                  value: "Error: ID not found"
  "/updateReservation/{reservationId}/{sWhat}/{sTo}":
    patch:
      summary: Update a reservation
      operationId: updateReservation
      tags:
        - Reservation
        - update
        - change
      parameters:
        - name: reservationId
          in: path
          required: true
          description: The unique identifier for the reservation
          schema:
            type: integer
            format: int64
        - name: sWhat
          in: path
          required: true
          description: What to change (only the listed letters)
          schema:
            type: string
            minLength: 1
            maxLength: 1
        - name: sTo
          in: path
          required: true
          description: content to update reservation field with
          schema:
            type: string
      responses:
        "200":
          description: Successful. responds with message and corresponding reservation
          content:
            text/html:
              schema:
                type: string
        "400":
          description: Wrong letter option selected
          content:
            text/html:
              schema:
                type: string
              examples:
                InvalidOption:
                  value: "Error: Option is invalid"
        "404":
          description: Reservation Id not found or Repository Empty
          content:
            text/html:
              schema:
                type: string
              examples:
                emptyRepository:
                  value: "Empty Repository: No reservations to return"
                noMatch:
                  value: "Error: ID not found"
  "/searchReservation/{criteria}":
    get:
      summary: search for reservations adhering to criteria
      operationId: searchReservation
      tags:
        - Reservation
        - search
        - lookup
      parameters:
        - name: criteria
          in: path
          required: true
          description: search criteria
          schema:
            type: string
      responses:
        "200":
          description: Successful. responds with message and list of reservations
          content:
            text/html:
              schema:
                type: string
        "404":
          description: No reservations match or Repository Empty
          content:
            text/html:
              schema:
                type: string
              examples:
                emptyRepository:
                  value: "Empty Repository: No reservations to return"
                noMatch:
                  value: No reservation match
components:
  schemas:
    Reservation:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        carId:
          type: integer
          format: int64
        fromDate:
          type: string
          format: date
        toDate:
          type: string
          format: date
        pickUpLocation:
          type: string
        dropOffLocation:
          type: string
      required:
        - id
